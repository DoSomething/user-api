$forge-path: '~@dosomething/forge/assets/';
$accepted-green: #80e85d;

// Import Forge.
@import '~@dosomething/forge/scss/forge';

// Fix 'button' styling in Forge's modal container:
.modal-close-button {
  background-color: transparent;
  border: 0;
}

// Fix awkward disabled styling on Forge's `.button.-tertiary`.
.button.-tertiary:disabled,
.button.-tertiary:disabled:hover {
  background: transparent;
  color: $light-gray;
}

.container__block.-third {
  @include media($tablet) {
    @include span(4 of 12);
  }

  word-wrap: break-word;
}

// Attached button:
.button.-attached {
  width: 100%;
  border-radius: 0;
}

// Outlined button:
.button.-outlined-button {
  background: $white;
  color: $light-gray;
  border: 3px solid $light-gray;
  padding: 14px !important; // Fix alignment bug in Forge.
  text-transform: none;

  &.-accepted {
    &:hover {
      background: lighten($accepted-green, $color-tint);
      border-color: lighten($accepted-green, $color-tint);
      color: $white;
    }

    &:active,
    &:focus,
    &.is-selected {
      background: darken($accepted-green, $color-tint);
      border-color: darken($accepted-green, $color-tint);
      color: $white;
    }
  }

  &.-rejected {
    &:hover {
      background: lighten($error-color, $color-tint);
      border-color: lighten($error-color, $color-tint);
      color: $white;
    }

    &:active,
    &:focus,
    &.is-selected {
      background: darken($error-color, $color-tint);
      border-color: darken($error-color, $color-tint);
      color: $white;
    }
  }
}

// Tag buttons:
.tag {
  background: $white;
  color: $med-gray;
  font-size: $font-small;
  border: 1px solid $light-gray;
  margin: 10px 10px 0 0;
  border-radius: 5px;

  &:focus {
    outline: 0;
  }

  &:hover,
  &.is-active {
    background: $blue;
    border-color: $blue;
    color: $white;
  }
}

// Table styles:
.table {
  display: table;
  width: 100%;
  border: 1px solid $light-gray;
  border-radius: $sm-border-radius;
  border-collapse: separate;
  width: 100%;
  overflow-x: auto;

  thead {
    background: $white;
    color: $purple;
    font-weight: $weight-bold;
    text-align: left;
  }

  tbody tr {
    background: $white;
  }

  tbody tr:nth-of-type(odd) {
    background: #efefef;
  }

  td {
    padding: ($base-spacing / 4) ($base-spacing / 2);
  }
}

// Modal:
.modal-container {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  min-height: 100%;
  z-index: 9999;
  background: rgba(#000, 0.5);

  @include media($tablet) {
    padding: 72px;
  }
}

.modal {
  position: relative;
  background: #fff;
  box-shadow: 0 0 60px rgba(0, 0, 0, 0.75);
  width: auto;
  word-wrap: break-word;
  overflow: hidden;
  z-index: 1050;

  @include media($tablet) {
    max-width: 600px;
    min-height: 0;
    margin: 0 auto;
  }
}

.modal-close-button {
  position: absolute;
  top: $base-spacing / 2;
  right: $base-spacing;
  font-size: 36px;
  font-weight: bold;
  color: $light-gray;
  cursor: pointer;

  &:hover,
  &:active {
    color: $med-gray;
  }
}

// Quantity component:
.quantity {
  border: 3px solid #4e2b63;
  padding: 4px 12px;
  color: #4e2b63;
  font-weight: bold;
  margin-right: 5px;
}

.inbox-item {
  padding: $section-spacing 0;
  border-bottom: 2px solid $purple;
}

.figure__media.rounded-figure img {
  border-radius: 50%;
}

.spinner.-small {
  background-size: 20px;
}

.pagination {
  text-align: center;

  li {
    display: inline;
  }
}

.-half {
  float: left;
  width: 50%;
  padding-right: $base-spacing / 2;
}

.form-item.-third {
  float: left;
  width: 33.33333333333%;
}

.form-item.-third + .form-item.-third {
  padding-left: $base-spacing / 2;
}

// Utility classes.
.columns-2 {
  columns: 2;
}

.font-normal {
  font-weight: $weight-normal;
}

// Tailwind-style helper to fill viewport height, minus header.
.h-content {
  width: 100%;
  min-height: calc(100vh - 267px);
}

// Tailwind-style helper to pad the top of an element as if a
// heading was there (for example, to align heading-less content
// with other elements in a grid):
.pt-heading {
  padding-top: $font-regular + 4px !important;
}

.flex-center-xy {
  display: flex;
  justify-content: center;
  align-items: center;
}

.text-right {
  text-align: right !important;
}

.text-center {
  text-align: center !important;
}

.text-sm {
  font-size: $font-small !important;
}

.text-gray {
  color: $dark-gray !important;
}

.text-gray-500 {
  color: $med-gray !important;
}

.text-red {
  color: $error-color !important;
}

.text-italic {
  font-style: italic !important;
}

.margin-vertical {
  margin-top: $base-spacing;
  margin-bottom: $base-spacing;
}

.margin-horizontal-auto {
  margin-left: auto;
  margin-right: auto;
}

.button.-rotate {
  padding: 0;

  &:before {
    content: '';
    background: transparent url('./images/rotate_spinner.svg');
    background-size: cover;
    display: inline-block;
    height: 15px;
    width: 15px;
    margin-right: 8px;
    margin-top: 8px;
  }
}

// Arrow helpers:
.arrow-up:after,
.arrow-down:after {
  content: '';
  display: inline-block;
  vertical-align: middle;
  margin-left: 4px;
}

.arrow-up:after {
  border-left: 5px solid transparent;
  border-right: 5px solid transparent;
  border-bottom: 6px solid $med-gray;
}

.arrow-down:after {
  border-left: 5px solid transparent;
  border-right: 5px solid transparent;
  border-top: 6px solid $med-gray;
}

// Tailwind helpers:
.text-center {
  text-align: center !important;
}

.underline {
  text-decoration: underline !important;
}

.hover\:underline:hover {
  text-decoration: underline !important;
}

.cursor-pointer {
  cursor: pointer !important;
}

.mb-4 {
  margin-bottom: $base-spacing !important;
}

.my-4 {
  margin-top: $base-spacing;
  margin-bottom: $base-spacing;
}

.py-4 {
  margin-top: $base-spacing;
  margin-bottom: $base-spacing;
}

.p-0 {
  padding: 0;
}

.border-solid {
  border-style: solid;
}

.border-gray-300 {
  border-color: $light-gray;
}

.border-b-2 {
  border-bottom-width: 2px;
}

.float-left {
  float: left;
}

.float-right {
  float: right;
}
